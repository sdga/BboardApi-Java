<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zjmeow.bboard.dao.BillboardMapper">
    <resultMap id="BaseResultMap" type="com.zjmeow.bboard.model.dto.Billboard">
        <id column="id" jdbcType="INTEGER" property="id"/>
        <result column="previous" jdbcType="INTEGER" property="previous"/>
        <result column="weeks" jdbcType="INTEGER" property="weeks"/>
        <result column="peak" jdbcType="INTEGER" property="peak"/>
        <result column="rank" jdbcType="INTEGER" property="rank"/>
        <result column="date" jdbcType="TIMESTAMP" property="date"/>
        <result column="song_id" jdbcType="INTEGER" property="songId"/>
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
    id, previous, weeks, peak, rank, date, song_id
  </sql>
    <select id="selectByExample" parameterType="com.zjmeow.bboard.model.dto.BillboardExample" resultMap="BaseResultMap">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from billboard
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from billboard
        where id = #{id,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from billboard
    where id = #{id,jdbcType=INTEGER}
  </delete>
    <delete id="deleteByExample" parameterType="com.zjmeow.bboard.model.dto.BillboardExample">
        delete from billboard
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" parameterType="com.zjmeow.bboard.model.dto.Billboard">
    insert into billboard (id, previous, weeks, 
      peak, rank, date, 
      song_id)
    values (#{id,jdbcType=INTEGER}, #{previous,jdbcType=INTEGER}, #{weeks,jdbcType=INTEGER}, 
      #{peak,jdbcType=INTEGER}, #{rank,jdbcType=INTEGER}, #{date,jdbcType=TIMESTAMP}, 
      #{songId,jdbcType=INTEGER})
  </insert>
    <insert id="insertSelective" parameterType="com.zjmeow.bboard.model.dto.Billboard">
        insert into billboard
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="previous != null">
                previous,
            </if>
            <if test="weeks != null">
                weeks,
            </if>
            <if test="peak != null">
                peak,
            </if>
            <if test="rank != null">
                rank,
            </if>
            <if test="date != null">
                date,
            </if>
            <if test="songId != null">
                song_id,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=INTEGER},
            </if>
            <if test="previous != null">
                #{previous,jdbcType=INTEGER},
            </if>
            <if test="weeks != null">
                #{weeks,jdbcType=INTEGER},
            </if>
            <if test="peak != null">
                #{peak,jdbcType=INTEGER},
            </if>
            <if test="rank != null">
                #{rank,jdbcType=INTEGER},
            </if>
            <if test="date != null">
                #{date,jdbcType=TIMESTAMP},
            </if>
            <if test="songId != null">
                #{songId,jdbcType=INTEGER},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="com.zjmeow.bboard.model.dto.BillboardExample"
            resultType="java.lang.Long">
        select count(*) from billboard
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update billboard
        <set>
            <if test="record.id != null">
                id = #{record.id,jdbcType=INTEGER},
            </if>
            <if test="record.previous != null">
                previous = #{record.previous,jdbcType=INTEGER},
            </if>
            <if test="record.weeks != null">
                weeks = #{record.weeks,jdbcType=INTEGER},
            </if>
            <if test="record.peak != null">
                peak = #{record.peak,jdbcType=INTEGER},
            </if>
            <if test="record.rank != null">
                rank = #{record.rank,jdbcType=INTEGER},
            </if>
            <if test="record.date != null">
                date = #{record.date,jdbcType=TIMESTAMP},
            </if>
            <if test="record.songId != null">
                song_id = #{record.songId,jdbcType=INTEGER},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update billboard
        set id = #{record.id,jdbcType=INTEGER},
        previous = #{record.previous,jdbcType=INTEGER},
        weeks = #{record.weeks,jdbcType=INTEGER},
        peak = #{record.peak,jdbcType=INTEGER},
        rank = #{record.rank,jdbcType=INTEGER},
        date = #{record.date,jdbcType=TIMESTAMP},
        song_id = #{record.songId,jdbcType=INTEGER}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="com.zjmeow.bboard.model.dto.Billboard">
        update billboard
        <set>
            <if test="previous != null">
                previous = #{previous,jdbcType=INTEGER},
            </if>
            <if test="weeks != null">
                weeks = #{weeks,jdbcType=INTEGER},
            </if>
            <if test="peak != null">
                peak = #{peak,jdbcType=INTEGER},
            </if>
            <if test="rank != null">
                rank = #{rank,jdbcType=INTEGER},
            </if>
            <if test="date != null">
                date = #{date,jdbcType=TIMESTAMP},
            </if>
            <if test="songId != null">
                song_id = #{songId,jdbcType=INTEGER},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.zjmeow.bboard.model.dto.Billboard">
    update billboard
    set previous = #{previous,jdbcType=INTEGER},
      weeks = #{weeks,jdbcType=INTEGER},
      peak = #{peak,jdbcType=INTEGER},
      rank = #{rank,jdbcType=INTEGER},
      date = #{date,jdbcType=TIMESTAMP},
      song_id = #{songId,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>